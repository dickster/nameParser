package parser;

import com.google.common.base.Preconditions;
import parser.jj.NameParserConstants;

// TODO : extend this class so there is salutationToken, titleToken, relationToken
public abstract class Token {

    final int kind;
    final String value;    // e.g. "Mr."    the value the user originally input.
    final String tokenText;     // e.g. <MR>     the token image string.   generated by javacc.
    String normalizedText; // e.g. Mister      a user/db friendly standardized tring for value.
    final TokenType type;

    public static final int EMPTY_TOKEN_KIND = -1;

    Token(TokenType type) {
        this("$$$EMPTY$$$", EMPTY_TOKEN_KIND, type);
    }

    Token(String value, int kind, TokenType type) {
        Preconditions.checkArgument(value != null);
        this.value = value;
        this.kind = kind;
        this.tokenText = kind==EMPTY_TOKEN_KIND ? value : NameParserConstants.tokenImage[kind];
        this.normalizedText = value;  // by default.
        this.type = type;

    }

    @Override
    public String toString() {
        return normalizedText;
    }

    public boolean isEmpty() {
        return kind==EMPTY_TOKEN_KIND;
    }

}